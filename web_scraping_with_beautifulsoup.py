# -*- coding: utf-8 -*-
"""Web Scraping with BeautifulSoup.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ATzz89uBTQB8JLVOT7CxGxbRiope19Lj
"""

import requests
from bs4 import BeautifulSoup
import pandas as pd

urls = ['https://www.brooklyncollegeathletics.com/sports/womens-swimming-and-diving/roster',    ##URLs for women swimmers
        'https://athletics.baruch.cuny.edu/sports/womens-swimming-and-diving/roster',
        'https://queensknights.com/sports/womens-swimming-and-diving/roster']

df_list = list()    ##list to prevent dataframe from resetting on each iteration

for url in urls:
    response = requests.get(url)
    soup = BeautifulSoup(response.content, "html.parser")

    height_swimmers = soup.findAll('span', class_ = "sidearm-roster-player-height")

    player_full_names_container = soup.find_all('div', class_ = "sidearm-roster-player-name") # container for player names
    player_full_names = [name.find("h3").get_text() for name in player_full_names_container] # List of player Full names DONT INCLUDE COACH NAMES 

    coaches_container = soup.findAll("div", class_= "sidearm-roster-coach-name") # coaches container section to check if person with given name is coach or not
    coach_names = [name.find("p").get_text().strip() for name in coaches_container] # List of Coach names
    #print(coach_names)

    full_name = []
    height = []
    min_length = min({len(height_swimmers), len(player_full_names)})   #length of height list that corresponds to full name list
    for name in player_full_names_container:
        name = name.get_text()
        full_name.append(name)
    for text in height_swimmers:
        feet, inches = text.get_text()[:-1].split("'")
        height.append(int(feet) * 12 + int(inches))
   
    df_final = pd.DataFrame()
    df_final['Name'] = full_name
    df_final['Name'].replace(r'\s+|\\n', ' ', regex = True, inplace = True)
    df_final['Height(inches)'] = height[:min_length]
    df_list.append(df_final)   ##appends final dataframe to the df list 

df_result = pd.concat(df_list, axis = 0, ignore_index = True) #combines columns in df list, ignores url indexing 
df_result

df_result['Height(inches)'].mean() #average height of swimmers

df_result.nlargest(5, ['Height(inches)'])   #five tallest swimmers

df_result.nsmallest(5, ['Height(inches)']) #five shortest swimmers